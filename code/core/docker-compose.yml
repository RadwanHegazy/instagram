name: instagram

services:

  # Django Application
  web:
    container_name: web
    build: .
    command: python manage.py runserver  0.0.0.0:8000
    volumes:
      - .:/app
    environment:
      DB_HOST: "db"

    ports:
      - "8000:8000"
    env_file:
      - .env # pass the env file here to work successfully
    depends_on:
      - db
      - redis
    restart: always
      
  # PostgreSQL Database
  db:
    container_name: postgre_db
    image: postgres:latest
    environment:
      POSTGRES_DB: "instagram"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

    volumes:
      - pg_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
  
  # Redis Server
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    container_name: celery
    command: sh run_celery.sh

    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: always
    environment:
      DB_HOST: "db"
    volumes:
      - .:/app

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A core beat --loglevel=info
    env_file:
      - .env
    environment:
      DB_HOST: "db"
    depends_on:
      - redis
      - db
      - celery
    volumes:
      - .:/app

volumes:
  pg_data:
  redis_data:

